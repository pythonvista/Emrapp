{"version":3,"file":"ngx-daterange.js","sources":["../src/modules/ngx-daterange/src/components/calendar/calendar.component.ts","../../src/modules/ngx-daterange/src/constants/default-formats.ts","../../src/modules/ngx-daterange/src/constants/default-range-picker-options.ts","../src/modules/ngx-daterange/src/components/datepicker/date-range-picker.component.ts","../../src/modules/ngx-daterange/src/pipes/format-moment-date.pipe.ts","../../../src/modules/ngx-daterange/src/ngx-daterange.module.ts","../../../src/modules/ngx-daterange/src/ngx-daterange.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport * as momentNs from 'moment'; const moment = momentNs;\n\nimport { extendMoment, DateRange } from 'moment-range';\nimport { IChangedData, IDateRange } from '../../interfaces';\n\nconst { range } = extendMoment(moment);\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'calendar',\n  styleUrls: [\n    './calendar.component.scss',\n  ],\n  templateUrl: './calendar.component.html'\n})\nexport class CalendarComponent implements OnChanges {\n\n  @Input()\n  month: number;\n\n  @Input()\n  year: number;\n\n  @Input()\n  selectedFromDate: momentNs.Moment;\n\n  @Input()\n  selectedToDate: momentNs.Moment;\n\n  @Input()\n  isLeft: boolean;\n\n  @Input()\n  format: string;\n\n  @Input()\n  minDate: momentNs.Moment;\n\n  @Input()\n  maxDate: momentNs.Moment;\n\n  @Input()\n  singleCalendar = false;\n\n  @Input()\n  icons: string;\n\n  @Output()\n  dateChanged = new EventEmitter<IChangedData>();\n\n  @Output()\n  monthChanged = new EventEmitter<IChangedData>();\n\n  @Output()\n  yearChanged = new EventEmitter<IChangedData>();\n\n  weekList: IDateRange[];\n\n  get monthText() {\n    return moment.monthsShort()[this.month];\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // Set the right calendar month and year equal to the left calendar\n    // if the left calendar's date if after the right\n    if (!this.isLeft) {\n      let currentValue = changes?.selectedFromDate?.currentValue as unknown as momentNs.Moment;\n\n      if (currentValue) {\n        if (!moment.isMoment(currentValue)) {\n          currentValue = moment(currentValue);\n        }\n\n        const month: number = currentValue.month();\n        const year: number = currentValue.year();\n\n        if (year > this.year || (year === this.year && month > this.month)) {\n          this.month = month;\n          this.year = year;\n        }\n      }\n    }\n\n    this.createCalendarGridData();\n  }\n\n  getWeekNumbers(monthRange: DateRange): number[] {\n    const weekNumbers = [];\n    const weeks = Array.from(monthRange.by('weeks'));\n\n    for (let i = 0; i < weeks.length; i++) {\n      const week = weeks[i];\n\n      if (i < 6) {\n        weekNumbers.push(week.week());\n      }\n      else {\n        break;\n      }\n    }\n\n    return weekNumbers;\n  }\n\n  getWeeksRange(weeks: number[]): DateRange[] {\n    const weeksRange = [];\n\n    for (let i = 0; i < weeks.length; i++) {\n      const weekNumber = weeks[i];\n\n      let firstWeekDay: momentNs.Moment = moment([this.year, this.month]).week(weekNumber).day(0);\n      let lastWeekDay: momentNs.Moment = moment([this.year, this.month]).week(weekNumber).day(6);\n\n      // Set year to the next year if the week number is lower than the starting week\n      // this indicates that the week is in January of the next year\n      if (weekNumber < weeks[0]) {\n        firstWeekDay = moment([this.year + 1, 0]).week(weekNumber).day(0);\n        lastWeekDay = moment([this.year + 1, 0]).week(weekNumber).day(6);\n      }\n\n      weeksRange.push(range(firstWeekDay, lastWeekDay));\n    }\n\n    return weeksRange;\n  }\n\n  createCalendarGridData(): void {\n    const firstDay = moment([this.year, this.month]).startOf('month');\n    const endDay = moment([this.year, this.month]).endOf('month').add(1, 'week');\n    const monthRange = range(firstDay, endDay);\n    const weeksRange = this.getWeeksRange(this.getWeekNumbers(monthRange));\n    const weekList = [];\n\n    weeksRange.map(week => {\n      const daysList = [];\n\n      Array.from(week.by('days')).forEach((day: momentNs.Moment) => {\n        if (day.isSame(this.minDate, 'date')) {\n          day = this.minDate;\n        }\n        else if (day.isSame(this.maxDate, 'date')) {\n          day = this.maxDate;\n        };\n\n        daysList.push(day);\n      });\n\n      weekList.push(daysList);\n    });\n\n    this.weekList = weekList;\n  }\n\n  isDisabled(day: momentNs.Moment): boolean {\n    return (day.isBefore(this.minDate) || day.isAfter(this.maxDate)) || (day.isBefore(this.selectedFromDate) && !this.isLeft);\n  }\n\n  isDateAvailable(day: momentNs.Moment): boolean {\n    if (this.isLeft) {\n      return day.isSameOrBefore(this.selectedToDate, 'date') && !day.isSameOrBefore(this.minDate, 'date');\n    }\n\n    return day.isSameOrAfter(this.selectedFromDate, 'date') && !day.isSameOrAfter(this.maxDate, 'date');\n  }\n\n  isSelectedDate(day: momentNs.Moment): boolean {\n    const date = this.isLeft ? this.selectedFromDate : this.selectedToDate;\n\n    return date && day.isSame(date, 'date');\n  }\n\n  isDateInRange(day: momentNs.Moment): boolean {\n    if (this.selectedFromDate && this.selectedToDate) {\n      const selectedRange = range(this.selectedFromDate, this.selectedToDate);\n\n      return selectedRange.contains(day);\n    }\n\n    return false;\n  }\n\n  isDifferentMonth(day: momentNs.Moment): boolean {\n    return day.get('month') !== this.month;\n  }\n\n  dateSelected(event: Event, data: IChangedData): void {\n    const target = event.target as HTMLTableCellElement;\n\n    if (!target.classList.contains('disabled')) {\n      this.dateChanged.emit({\n        day: data.day,\n        isLeft: this.isLeft\n      });\n    }\n\n    event.stopPropagation();\n  }\n\n  monthSelected(event: Event, data: IChangedData): void {\n    this.monthChanged.emit({\n      value: data.value,\n      isLeft: this.isLeft\n    });\n\n    event.stopPropagation();\n  }\n\n  yearSelected(event: Event, data: IChangedData): void {\n    this.yearChanged.emit({\n      value: data.value,\n      isLeft: this.isLeft\n    });\n\n    event.stopPropagation();\n  }\n}\n","export const defaultDateFormat = 'YYYY-MM-DD';\nexport const defaultTimeFormat = 'HH:mm';\n","import { IDateRangePickerOptions } from '../interfaces';\n\nimport { defaultDateFormat } from '../constants/default-formats';\n\nexport const defaultDateRangePickerOptions: IDateRangePickerOptions = {\n  autoApply: true,\n  clickOutsideAllowed: true,\n  disabled: false,\n  icons: 'default',\n  format: defaultDateFormat,\n  labelText: 'Date Range',\n  maxDate: null,\n  minDate: null,\n  position: 'left',\n  preDefinedRanges: [],\n  showResetButton: true,\n  singleCalendar: false,\n};\n","import { Component, Input, Output, EventEmitter, HostListener, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { defaultDateRangePickerOptions } from '../../constants';\nimport { IDateRange, IDateRangePickerOptions, IDefinedDateRange, IChangedData } from '../../interfaces';\n\nimport * as momentNs from 'moment'; const moment = momentNs;\n\nlet instanceCount = 0;\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'date-range-picker',\n  styleUrls: [\n    './date-range-picker.component.scss',\n  ],\n  templateUrl: './date-range-picker.component.html',\n})\nexport class DateRangePickerComponent implements OnInit {\n\n  @Input()\n  options: IDateRangePickerOptions = defaultDateRangePickerOptions;\n\n  @Input()\n  controlName: string = 'dateRange';\n\n  @Input()\n  instanceId: string = null;\n\n  @Input()\n  parentFormGroup: FormGroup;\n\n  @Input()\n  fromDate: momentNs.Moment = null;\n\n  @Input()\n  toDate: momentNs.Moment = null;\n\n  @Output()\n  datepickerReset = new EventEmitter<any>();\n\n  @Output()\n  rangeSelected = new EventEmitter<IDateRange>();\n\n  defaultRanges: IDefinedDateRange[];\n  isMobile = false;\n  fromMonth: number;\n  fromYear: number;\n  toMonth: number;\n  toYear: number;\n  range = '';\n  showCalendars = false;\n\n  get enableApplyButton(): boolean {\n    let enabled = !this.options.autoApply && this.fromDate !== null;\n\n    if (this.options.singleCalendar) {\n      return enabled;\n    }\n\n    return enabled && this.toDate !== null;\n  }\n\n  @HostListener('document:click', ['$event'])\n  handleClick(event: Event) {\n    const target = event.target as HTMLInputElement;\n\n    // close the DatePicker if clicking outside is not allowed\n    if (!this.options.clickOutsideAllowed) {\n      let targetPathClassNames: string[] = [];\n\n      try {\n        targetPathClassNames = event.composedPath().map((obj: EventTarget) => obj['className']) || [''];\n      }\n      catch (error) {\n        // IE / Edge\n        targetPathClassNames = event['path'].map(obj => obj.className);\n      }\n\n      const containerElementClassRoot = 'dateRangePicker';\n      const targetExistsInPath = targetPathClassNames.some(className => {\n        if (typeof className === 'string') {\n          return className && className.includes(containerElementClassRoot);\n        }\n\n        return false;\n      });\n\n      if (!targetExistsInPath) {\n        this.toggleCalendarVisibility(false);\n      }\n    }\n\n    // Close the DatePicker if the target input was clicked\n    if (target.id === this.instanceId) {\n      this.toggleCalendarVisibility(!this.showCalendars);\n    }\n  }\n\n  constructor() {\n    if (!this.instanceId) {\n      // assign auto-id\n      this.instanceId = `dateRangePicker-${ instanceCount++ }`;\n    }\n  }\n\n  ngOnInit(): void {\n    if (navigator) {\n      if (navigator.userAgent.match(/Android/i)\n        || navigator.userAgent.match(/webOS/i)\n        || navigator.userAgent.match(/iPhone/i)\n        || navigator.userAgent.match(/iPod/i)\n        || navigator.userAgent.match(/BlackBerry/i)\n        || navigator.userAgent.match(/Windows Phone/i)) {\n        this.isMobile = true;\n      }\n    }\n\n    // ensure dates in options are valid\n    this.validateOptionDates();\n\n    // ensure input dates are within the min/max dates in options\n    this.validateInputDates();\n\n    if (this.options.preDefinedRanges && this.options.preDefinedRanges.length > 0) {\n      this.defaultRanges = this.validateAndAssignPredefinedRanges(this.options.preDefinedRanges);\n    }\n\n    // assign values not present in options with default values\n    const optionsKeys = Object.keys(this.options);\n    const defaultValuesKeys = Object.keys(defaultDateRangePickerOptions);\n\n    defaultValuesKeys.forEach((key: string) => {\n      if (!optionsKeys.includes(key)) {\n        this.options[key] = defaultDateRangePickerOptions[key];\n      }\n    });\n\n    // update calendar grid\n    this.updateCalendar();\n\n    // create parent form group if it doesn't exist\n    if (!this.parentFormGroup) {\n      this.parentFormGroup = new FormGroup({});\n    }\n\n    // add form control to parent form group\n    const value = this.formatRangeAsString();\n    const control = new FormControl(value, this.options.validators);\n\n    if (this.options.disabled) {\n      control.disable();\n    }\n\n    this.parentFormGroup.addControl(this.controlName, control);\n\n    // set value of control\n    this.setRange();\n  }\n\n  validateInputDates(): void {\n    if (typeof this.fromDate === 'string') {\n      this.fromDate = moment(this.fromDate);\n    }\n\n    if (typeof this.toDate === 'string') {\n      this.toDate = moment(this.toDate);\n    }\n\n    if (this.fromDate && this.options.minDate && this.fromDate.isBefore(this.options.minDate, 'date')) {\n      throw new RangeError('@Input fromDate is before the specified minDate in options');\n    }\n\n    if (this.toDate && this.options.maxDate && this.toDate.isAfter(this.options.maxDate, 'date')) {\n      throw new RangeError('@Input toDate is after the specified maxDate in options');\n    }\n  }\n\n  validateOptionDates(): void {\n    // validate maxDate isn't before minDate or vice versa\n    if (this.options) {\n      if (this.options.minDate && this.options.maxDate) {\n        if (this.options.minDate.isAfter(this.options.maxDate, 'date')) {\n          throw new RangeError('minDate specified in options is after the maxDate');\n        }\n        else if (this.options.maxDate.isBefore(this.options.minDate, 'date')) {\n          throw new RangeError('maxDate specified in options is before the minDate');\n        }\n      }\n    }\n  }\n\n  // assists CSS to fix small positioning bug with From:/To: date text\n  checkChrome(): string {\n    return window['chrome'] ? 'is-chrome' : '';\n  }\n\n  toggleCalendarVisibility(value?: boolean): void {\n    this.showCalendars = value !== null ? value : !this.showCalendars;\n  }\n\n  setFromToMonthYear(fromDate?: momentNs.Moment, toDate?: momentNs.Moment): void {\n    const tempFromDate = fromDate || this.fromDate || moment();\n    const tempToDate = toDate || this.toDate || moment();\n\n    this.fromMonth = tempFromDate.get('month');\n    this.fromYear = tempFromDate.get('year');\n\n    this.toMonth = tempToDate.get('month');\n    this.toYear = tempToDate.get('year');\n  }\n\n  updateCalendar(): void {\n    // get month and year to show calendar\n    this.setFromToMonthYear();\n    this.setRange();\n  }\n\n  // update from/to based on selection\n  dateChanged(changedData: IChangedData): void {\n    const value = changedData.day;\n    const isLeft = changedData.isLeft;\n\n    if (isLeft) {\n      this.fromDate = value;\n\n      if (this.fromDate.isAfter(this.toDate, 'date')) {\n        this.toDate = this.fromDate.clone();\n      }\n    }\n    else {\n      this.toDate = value;\n\n      if (this.toDate.isBefore(this.fromDate, 'date')) {\n        this.fromDate = this.toDate.clone();\n      }\n    }\n\n    this.setFromToMonthYear(this.fromDate, this.toDate);\n\n    if (this.options.autoApply && (this.toDate || this.options.singleCalendar)) {\n      this.toggleCalendarVisibility(false);\n      this.setRange();\n      this.emitRangeSelected();\n    }\n  }\n\n  emitRangeSelected(data?: IDateRange): void {\n    if (!data) {\n      data = this.options.singleCalendar ? { start: this.fromDate } : { start: this.fromDate, end: this.toDate };\n    }\n\n    this.rangeSelected.emit(data);\n  }\n\n  getMoment(value): momentNs.Moment {\n    return moment(value, this.options.format);\n  }\n\n  formatRangeAsString(): string {\n    let range = '';\n\n    if (this.options.singleCalendar && this.fromDate) {\n      if (typeof this.fromDate === 'string') {\n        this.fromDate = moment(this.fromDate);\n      }\n\n      range = this.fromDate.format(this.options.format);\n    }\n    else if (!this.options.singleCalendar && this.fromDate && this.toDate) {\n      if (typeof this.fromDate === 'string') {\n        this.fromDate = moment(this.fromDate);\n      }\n\n      if (typeof this.toDate === 'string') {\n        this.toDate = moment(this.toDate);\n      }\n\n      range = `${ this.fromDate.format(this.options.format) } - ${ this.toDate.format(this.options.format) }`;\n    }\n\n    return range;\n  }\n\n  setRange(): void {\n    this.range = this.formatRangeAsString();\n\n    if (this.parentFormGroup) {\n      const control = this.parentFormGroup.get(this.controlName);\n\n      if (control) {\n        control.setValue(this.range);\n        control.updateValueAndValidity();\n      }\n    }\n  }\n\n  setDateFromInput(event: Event, isLeft: boolean = false): void {\n    const target = event.target as HTMLInputElement;\n\n    try {\n      if (target.value) {\n        const day = this.getMoment(target.value);\n\n        if (!day.isBefore(this.options.minDate) && !day.isAfter(this.options.maxDate)) {\n          if (isLeft && !this.fromDate) {\n            this.fromDate = day;\n          }\n\n          if (!isLeft && !this.toDate) {\n            this.toDate = day;\n          }\n\n          this.dateChanged({\n            day,\n            isLeft,\n          });\n\n          if (this.fromDate && this.toDate) {\n            this.setFromToMonthYear(this.fromDate, this.toDate);\n\n            if (!this.options.autoApply) {\n              this.emitRangeSelected();\n            }\n          }\n        }\n        else {\n          // assume nothing - reset values\n          this.fromDate = null;\n          this.toDate = null;\n          target.value = '';\n          target.focus();\n        }\n      }\n    }\n    catch (e) {\n      console.error(e);\n    }\n  }\n\n  monthChanged(data: IChangedData): void {\n    let temp;\n\n    if (data.isLeft) {\n      temp = moment([this.fromYear, this.fromMonth]).add(data.value, 'month');\n      this.fromMonth = temp.get('month');\n      this.fromYear = temp.get('year');\n    }\n    else {\n      temp = moment([this.toYear, this.toMonth]).add(data.value, 'month');\n      this.toMonth = temp.get('month');\n      this.toYear = temp.get('year');\n    }\n  }\n\n  yearChanged(data: IChangedData): void {\n    let temp;\n\n    if (data.isLeft) {\n      temp = moment([this.fromYear, this.fromMonth]).add(data.value, 'year');\n      this.fromMonth = temp.get('month');\n      this.fromYear = temp.get('year');\n    }\n    else {\n      temp = moment([this.toYear, this.toMonth]).add(data.value, 'year');\n      this.toMonth = temp.get('month');\n      this.toYear = temp.get('year');\n    }\n  }\n\n  close(event: Event): void {\n    this.toggleCalendarVisibility(false);\n\n    event.stopPropagation();\n  }\n\n  reset(event: Event): void {\n    this.fromDate = null;\n    this.toDate = null;\n    this.setRange();\n    this.datepickerReset.emit();\n\n    event.stopPropagation();\n  }\n\n  apply(event: Event): void {\n    this.toggleCalendarVisibility(false);\n    this.setRange();\n    this.emitRangeSelected();\n\n    event.stopPropagation();\n  }\n\n  applyPredefinedRange(event: Event, definedDateRange: IDefinedDateRange): void {\n    // adjust to/from month/year so calendar months and years match range\n    this.setFromToMonthYear(definedDateRange.value.start, definedDateRange.value.end);\n\n    this.fromDate = definedDateRange.value.start;\n    this.toDate = definedDateRange.value.end;\n\n    if (this.options.autoApply) {\n      this.apply(event);\n    }\n  }\n\n  validateAndAssignPredefinedRanges(ranges: IDefinedDateRange[]): IDefinedDateRange[] {\n    return ranges.filter(range => {\n      if (range.value.start.isAfter(range.value.end, 'date')) {\n        throw new RangeError(`Pre-defined range \"${ range.name }\" start date cannot be after the end date for the range.`);\n      }\n\n      if (this.options.minDate && range.value.start.isBefore(this.options.minDate)) {\n        throw new RangeError(`Pre-defined range \"${ range.name }\" start date is before the specified minDate in your options.`);\n      }\n\n      if (this.options.maxDate && range.value.end.isAfter(this.options.maxDate)) {\n        throw new RangeError(`Pre-defined range \"${ range.name }\" end date is after the specified maxDate in your options.`);\n      }\n\n      // add range to ranges\n      return true;\n    });\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as momentNs from 'moment';\nconst moment = momentNs;\n\n@Pipe({\n  name: 'formatMomentDate'\n})\nexport class FormatMomentDatePipe implements PipeTransform {\n  transform(value: momentNs.Moment, format: string): string {\n    let valueToFormat = value;\n\n    if (valueToFormat && !momentNs.isMoment(valueToFormat)) {\n      valueToFormat = moment(valueToFormat);\n    }\n\n    return valueToFormat ? valueToFormat.format(format) : '';\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CalendarComponent } from './components/calendar/calendar.component';\nimport { DateRangePickerComponent } from './components/datepicker/date-range-picker.component';\nimport { FormatMomentDatePipe } from './pipes/format-moment-date.pipe';\n\nconst declarations = [\n  CalendarComponent,\n  DateRangePickerComponent,\n  FormatMomentDatePipe,\n];\n\n@NgModule({\n  declarations: [ ...declarations ],\n  exports: [ ...declarations ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n})\nexport class NgxDateRangeModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {FormatMomentDatePipe as ɵa} from './pipes/format-moment-date.pipe';"],"names":["moment","momentNs.isMoment"],"mappings":"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"}